name: 'Deploy App'

env:
  IMAGE_NAME: techchallenge-clientes

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '21'
        
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check version
        run: mvn -version

      - name: Build and Run Tests
        run: mvn test

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5

  # push-to-registry:
  #   name: Push Docker Image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v3

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}

  # deploy-helm:
  #   needs: push-to-registry
  #   name: Deploy Helm
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v4

  #     - name: JUnit Report Action
  #       uses: mikepenz/action-junit-report@v5

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
  #         aws-region: us-east-1

  #     - name: set up terraform
  #       uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_version: 1.6.1

  #     - name: init
  #       run: terraform init
  #       working-directory: './infra/'

  #     - name: validate
  #       run: terraform validate
  #       working-directory: './infra/'

  #     - name: plan
  #       run: terraform plan
  #       working-directory: './infra/'

  #     - name: apply
  #       run: terraform apply -auto-approve
  #       working-directory: './infra/'